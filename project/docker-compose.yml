services:
  frontend:
    container_name: frontend
    build: ./dumendenfront
    env_file:
      - .env
    hostname: frontend
    ports:
      - "3000:3000"
    networks:
      - backend

  apigateway:
    container_name: apigateway
    build: ./apigateway
    env_file:
      - .env
    hostname: apigateway
    ports:
      - "8000:8000"
    networks:
      - backend

  authservice:
    container_name: authservice
    build: ./auth_service
    env_file:
      - .env
    hostname: authservice
    networks:
      - backend

  userservice:
    container_name: userservice
    build: ./user_service
    env_file:
      - .env
    hostname: userservice
    networks:
      - backend

  friendservice:
    container_name: friendservice
    build: ./friends_service
    env_file:
      - .env
    hostname: friendservice
    networks:
      - backend

  notificationservice:
    container_name: notificationservice
    build: ./notification_service
    env_file:
      - .env
    hostname: notificationservice
    networks:
      - backend

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
    ports:
      - "8080:80"
    networks:
      - backend

  zookeeper:
    image: bitnami/zookeeper:latest
    env_file:
      - .env
    networks:
      - kafka-net
    
  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - kafka-net
    env_file:
      - .env
    
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    ports:
      - "9000:9000"
    env_file:
      - .env
    depends_on:
      - kafka
    networks:
      - kafka-net

networks:
  backend:
    driver: bridge
  kafka-net:
    driver: bridge