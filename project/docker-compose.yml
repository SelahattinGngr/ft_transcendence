services:
  frontend:
    container_name: frontend
    build: ./frontend
    depends_on:
      - apigateway
    env_file:
      - .env
    hostname: frontend
    ports:
      - "80:80"
    networks:
      - backend

  apigateway:
    container_name: apigateway
    build: ./apigateway
    env_file:
      - .env
    hostname: apigateway
    ports:
      - "8000:8000"
    networks:
      - backend

  authservice:
    container_name: authservice
    build: ./auth_service
    depends_on:
      - apigateway
    env_file:
      - .env
    hostname: authservice
    volumes:
      - auth_db_data:/var/lib/postgresql/data
    networks:
      - backend

  userservice:
    container_name: userservice
    build: ./user_service
    depends_on:
      - authservice
    env_file:
      - .env
    hostname: userservice
    volumes:
      - user_db_data:/var/lib/postgresql/data
    networks:
      - backend

  friendservice:
    container_name: friendservice
    build: ./friends_service
    depends_on:
      - userservice
    env_file:
      - .env
    hostname: friendservice
    volumes:
      - friend_db_data:/var/lib/postgresql/data
    networks:
      - backend

  notificationservice:
    container_name: notificationservice
    build: ./notification_service
    env_file:
      - .env
    hostname: notificationservice
    depends_on:
      - apigateway
      - redis
    volumes:
      - notification_db_data:/var/lib/postgresql/data
    networks:
      - backend
    
  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    networks:
      - backend
    restart: always
    volumes:
      - redis_data:/data
      

  mailservice:
    container_name: mailservice
    build: ./mail_service
    depends_on:
      - authservice
      - kafka
    env_file:
      - .env
    hostname: mailservice
    networks:
      - backend
  
  gameservice:
    container_name: gameservice
    build: ./game_service
    depends_on:
      - userservice
      - kafka
    env_file:
      - .env
    hostname: gameservice
    networks:
      - backend

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
    ports:
      - "8080:80"
    networks:
      - backend

  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    env_file:
      - .env
    networks:
      - kafka-net
      - backend
    
  kafka:
    container_name: kafka
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    env_file:
      - .env
    networks:
      - kafka-net
      - backend
    restart: unless-stopped

  kafdrop:
    container_name: kafdrop
    image: obsidiandynamics/kafdrop:latest
    ports:
      - "9000:9000"
    env_file:
      - .env
    depends_on:
      - kafka
    networks:
      - kafka-net
    restart: unless-stopped

networks:
  backend:
    driver: bridge
  kafka-net:
    driver: bridge

volumes:
  auth_db_data:
  user_db_data:
  friend_db_data:
  notification_db_data:
  redis_data:
